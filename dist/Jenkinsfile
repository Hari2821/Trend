pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "hari2821/trend-app:latest"
        AWS_REGION   = "us-east-1"
        CLUSTER_NAME = "trend-cluster"
    }

    stages {

        stage('Build Docker Image') {
            steps {
                script {
                    dir('dist') {
                        sh '''
                        echo "🚀 Building Docker image..."
                        docker build -t trend-app .
                        docker tag trend-app ${DOCKER_IMAGE}
                        '''
                    }
                }
            }
        }

        stage('Push to DockerHub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-creds',
                                                     usernameVariable: 'DOCKER_USER',
                                                     passwordVariable: 'DOCKER_PASS')]) {
                        sh '''
                        echo "🔑 Logging into DockerHub..."
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push ${DOCKER_IMAGE}
                        docker logout
                        '''
                    }
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                script {
                    sh '''
                    echo "☁️  Updating kubeconfig for EKS..."
                    aws eks update-kubeconfig --region ${AWS_REGION} --name ${CLUSTER_NAME}

                    echo "🚀 Deploying to Kubernetes..."
                    kubectl apply -f dist/k8/deployment.yaml
                    kubectl apply -f dist/k8/service.yaml

                    echo "🔍 Checking rollout status..."
                    kubectl rollout status deployment/trend-deployment --timeout=180s || true

                    echo "📦 Current Pods:"
                    kubectl get pods -o wide

                    echo "🌐 Service Info:"
                    kubectl get svc trend-service -o wide
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "✅ Deployment completed successfully!"
        }
        failure {
            echo "❌ Pipeline failed. Check logs for details."
        }
    }
}

